<?php

namespace Proxies\__CG__\soleil\FormationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Formation extends \soleil\FormationBundle\Entity\Formation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'titreFr', 'titreEn', 'textFr', 'textEn', 'datecreat', 'dateEdition', 'slug', 'site', 'evenementsAgenda');
        }

        return array('__isInitialized__', 'id', 'titreFr', 'titreEn', 'textFr', 'textEn', 'datecreat', 'dateEdition', 'slug', 'site', 'evenementsAgenda');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Formation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitreFr($titreFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitreFr', array($titreFr));

        return parent::setTitreFr($titreFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitreFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitreFr', array());

        return parent::getTitreFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitreEn($titreEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitreEn', array($titreEn));

        return parent::setTitreEn($titreEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitreEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitreEn', array());

        return parent::getTitreEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextFr($textFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextFr', array($textFr));

        return parent::setTextFr($textFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextFr', array());

        return parent::getTextFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextEn($textEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextEn', array($textEn));

        return parent::setTextEn($textEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextEn', array());

        return parent::getTextEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatecreat($datecreat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatecreat', array($datecreat));

        return parent::setDatecreat($datecreat);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatecreat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatecreat', array());

        return parent::getDatecreat();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEdition($dateEdition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEdition', array($dateEdition));

        return parent::setDateEdition($dateEdition);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEdition', array());

        return parent::getDateEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSite(\soleil\SiteBundle\Entity\Site $site)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSite', array($site));

        return parent::setSite($site);
    }

    /**
     * {@inheritDoc}
     */
    public function getSite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSite', array());

        return parent::getSite();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvenementsAgenda(\soleil\AgendaBundle\Entity\EvenementAgenda $evenementsAgenda)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvenementsAgenda', array($evenementsAgenda));

        return parent::addEvenementsAgenda($evenementsAgenda);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvenementsAgenda(\soleil\AgendaBundle\Entity\EvenementAgenda $evenementsAgenda)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvenementsAgenda', array($evenementsAgenda));

        return parent::removeEvenementsAgenda($evenementsAgenda);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvenementsAgenda()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvenementsAgenda', array());

        return parent::getEvenementsAgenda();
    }

}
