<?php

namespace Proxies\__CG__\soleil\SiteBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Site extends \soleil\SiteBundle\Entity\Site implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'domaine', 'titreFr', 'titreEn', 'descFr', 'descEn', 'image', 'rubriques', 'articles', 'contacts', 'realisations', 'formations', 'evenements');
        }

        return array('__isInitialized__', 'id', 'domaine', 'titreFr', 'titreEn', 'descFr', 'descEn', 'image', 'rubriques', 'articles', 'contacts', 'realisations', 'formations', 'evenements');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Site $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaine($domaine)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaine', array($domaine));

        return parent::setDomaine($domaine);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaine', array());

        return parent::getDomaine();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitreFr($titreFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitreFr', array($titreFr));

        return parent::setTitreFr($titreFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitreFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitreFr', array());

        return parent::getTitreFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitreEn($titreEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitreEn', array($titreEn));

        return parent::setTitreEn($titreEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitreEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitreEn', array());

        return parent::getTitreEn();
    }

    /**
     * {@inheritDoc}
     */
    public function addArticle(\soleil\ArticleBundle\Entity\Article $articles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArticle', array($articles));

        return parent::addArticle($articles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArticle(\soleil\ArticleBundle\Entity\Article $articles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArticle', array($articles));

        return parent::removeArticle($articles);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticles', array());

        return parent::getArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function addContact(\soleil\ContactBundle\Entity\Contact $contacts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContact', array($contacts));

        return parent::addContact($contacts);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContact(\soleil\ContactBundle\Entity\Contact $contacts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContact', array($contacts));

        return parent::removeContact($contacts);
    }

    /**
     * {@inheritDoc}
     */
    public function getContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContacts', array());

        return parent::getContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function addRealisation(\soleil\ecommerceBundle\Entity\Realisation $realisations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRealisation', array($realisations));

        return parent::addRealisation($realisations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRealisation(\soleil\ecommerceBundle\Entity\Realisation $realisations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRealisation', array($realisations));

        return parent::removeRealisation($realisations);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealisations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealisations', array());

        return parent::getRealisations();
    }

    /**
     * {@inheritDoc}
     */
    public function addFormation(\soleil\FormationBundle\Entity\Formation $formations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFormation', array($formations));

        return parent::addFormation($formations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFormation(\soleil\FormationBundle\Entity\Formation $formations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFormation', array($formations));

        return parent::removeFormation($formations);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormations', array());

        return parent::getFormations();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvenement(\soleil\AgendaBundle\Entity\EvenementAgenda $evenements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvenement', array($evenements));

        return parent::addEvenement($evenements);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvenement(\soleil\AgendaBundle\Entity\EvenementAgenda $evenements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvenement', array($evenements));

        return parent::removeEvenement($evenements);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvenements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvenements', array());

        return parent::getEvenements();
    }

    /**
     * {@inheritDoc}
     */
    public function addRubrique(\soleil\SiteBundle\Entity\Rubrique $rubriques)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRubrique', array($rubriques));

        return parent::addRubrique($rubriques);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRubrique(\soleil\SiteBundle\Entity\Rubrique $rubriques)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRubrique', array($rubriques));

        return parent::removeRubrique($rubriques);
    }

    /**
     * {@inheritDoc}
     */
    public function getRubriques()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRubriques', array());

        return parent::getRubriques();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescFr($descFr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescFr', array($descFr));

        return parent::setDescFr($descFr);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescFr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescFr', array());

        return parent::getDescFr();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescEn($descEn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescEn', array($descEn));

        return parent::setDescEn($descEn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescEn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescEn', array());

        return parent::getDescEn();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

}
